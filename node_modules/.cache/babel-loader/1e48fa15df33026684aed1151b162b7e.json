{"ast":null,"code":"import _slicedToArray from\"/Users/maciejwojtas/Projects/workflows/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useMemo,useState}from'react';import{isAce}from'../helpers/card';import{createShuffledDeck}from'../helpers/deck';var useCardDeck=function useCardDeck(){var _useState=useState(createShuffledDeck()),_useState2=_slicedToArray(_useState,2),cardsLeft=_useState2[0],setCardsLeft=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),deal=_useState4[0],setDeal=_useState4[1];var acesLeft=useMemo(function(){return cardsLeft.filter(function(card){return isAce(card);}).length;},[cardsLeft]);var reset=function reset(){setDeal([]);setCardsLeft(createShuffledDeck());};var makeDeal=function makeDeal(){setDeal(cardsLeft.slice(0,5));setCardsLeft(cardsLeft.slice(5));};return{deal:deal,makeDeal:makeDeal,reset:reset,cardsLeft:cardsLeft.length,acesLeft:acesLeft};};export default useCardDeck;","map":{"version":3,"sources":["/Users/maciejwojtas/Projects/workflows/src/hooks/useCardDeck.ts"],"names":["useMemo","useState","isAce","createShuffledDeck","useCardDeck","cardsLeft","setCardsLeft","deal","setDeal","acesLeft","filter","card","length","reset","makeDeal","slice"],"mappings":"4HAAA,OAASA,OAAT,CAAkBC,QAAlB,KAAkC,OAAlC,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,OAASC,kBAAT,KAAmC,iBAAnC,CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,cAAkCH,QAAQ,CAASE,kBAAkB,EAA3B,CAA1C,wCAAOE,SAAP,eAAkBC,YAAlB,eACA,eAAwBL,QAAQ,CAAS,EAAT,CAAhC,yCAAOM,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,QAAQ,CAAGT,OAAO,CACtB,iBAAcK,CAAAA,SAAS,CAACK,MAAV,CAAiB,SAACC,IAAD,QAAUT,CAAAA,KAAK,CAACS,IAAD,CAAf,EAAjB,EAAwCC,MAAtD,EADsB,CAEtB,CAACP,SAAD,CAFsB,CAAxB,CAKA,GAAMQ,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAY,CACxBL,OAAO,CAAC,EAAD,CAAP,CACAF,YAAY,CAACH,kBAAkB,EAAnB,CAAZ,CACD,CAHD,CAKA,GAAMW,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAY,CAC3BN,OAAO,CAACH,SAAS,CAACU,KAAV,CAAgB,CAAhB,CAAmB,CAAnB,CAAD,CAAP,CACAT,YAAY,CAACD,SAAS,CAACU,KAAV,CAAgB,CAAhB,CAAD,CAAZ,CACD,CAHD,CAKA,MAAO,CAAER,IAAI,CAAJA,IAAF,CAAQO,QAAQ,CAARA,QAAR,CAAkBD,KAAK,CAALA,KAAlB,CAAyBR,SAAS,CAAEA,SAAS,CAACO,MAA9C,CAAsDH,QAAQ,CAARA,QAAtD,CAAP,CACD,CApBD,CAsBA,cAAeL,CAAAA,WAAf","sourcesContent":["import { useMemo, useState } from 'react';\nimport { isAce } from '../helpers/card';\nimport { createShuffledDeck } from '../helpers/deck';\nimport { Card } from '../types/card';\n\nconst useCardDeck = () => {\n  const [cardsLeft, setCardsLeft] = useState<Card[]>(createShuffledDeck());\n  const [deal, setDeal] = useState<Card[]>([]);\n\n  const acesLeft = useMemo(\n    (): number => cardsLeft.filter((card) => isAce(card)).length,\n    [cardsLeft]\n  );\n\n  const reset = (): void => {\n    setDeal([]);\n    setCardsLeft(createShuffledDeck());\n  };\n\n  const makeDeal = (): void => {\n    setDeal(cardsLeft.slice(0, 5));\n    setCardsLeft(cardsLeft.slice(5));\n  };\n\n  return { deal, makeDeal, reset, cardsLeft: cardsLeft.length, acesLeft };\n};\n\nexport default useCardDeck;\n"]},"metadata":{},"sourceType":"module"}